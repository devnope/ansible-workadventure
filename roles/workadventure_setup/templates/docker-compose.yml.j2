version: "3.3"
services:
  reverse-proxy:
    image: traefik:v2.3
    command:
      - --log.level=WARN
      #- --api.insecure=true
      - --providers.docker
      - --entryPoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.email={{ letsencrypt.mail }}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      # used during the challenge
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      #- "8080:8080"
    depends_on:
      - pusher
      - front
    volumes:
      - /run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt/:/letsencrypt/
    restart: unless-stopped


  front:
    image: thecodingmachine/workadventure-front:v1.4.6
    environment:
      DEBUG_MODE: "$DEBUG_MODE"
      JITSI_URL: $JITSI_URL
      JITSI_PRIVATE_MODE: "$JITSI_PRIVATE_MODE"
      API_URL: pusher.${DOMAIN}
      TURN_SERVER: "${TURN_SERVER}"
      TURN_USER: "${TURN_USER}"
      TURN_PASSWORD: "${TURN_PASSWORD}"
      START_ROOM_URL: "${START_ROOM_URL}"
      NODE_ENV: "production"
      DISABLE_NOTIFICATIONS: "$DISABLE_NOTIFICATIONS"
      MAX_PER_GROUP: "${MAX_PER_GROUP}"
      MAX_USERNAME_LENGTH: "${MAX_USERNAME_LENGTH}"
      ANALYTICS_CODE_PATH: ""
    labels:
      - "traefik.http.routers.front.rule=Host(`play.${DOMAIN}`)"
      - "traefik.http.routers.front.entryPoints=web,traefik"
      - "traefik.http.services.front.loadbalancer.server.port=80"
      - "traefik.http.routers.front-ssl.rule=Host(`play.${DOMAIN}`)"
      - "traefik.http.routers.front-ssl.entryPoints=websecure"
      - "traefik.http.routers.front-ssl.tls=true"
      - "traefik.http.routers.front-ssl.service=front"
      - "traefik.http.routers.front-ssl.tls.certresolver=myresolver"
    restart: unless-stopped

  pusher:
    image: thecodingmachine/workadventure-pusher:v1.4.6
    command: yarn run runprod
    environment:
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      SECRET_KEY: "$SECRET_KEY"
      API_URL: back:50051
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
    labels:
      - "traefik.http.routers.pusher.rule=Host(`pusher.${DOMAIN}`)"
      - "traefik.http.routers.pusher.entryPoints=web,traefik"
      - "traefik.http.services.pusher.loadbalancer.server.port=8080"
      - "traefik.http.routers.pusher-ssl.rule=Host(`pusher.${DOMAIN}`)"
      - "traefik.http.routers.pusher-ssl.entryPoints=websecure"
      - "traefik.http.routers.pusher-ssl.tls=true"
      - "traefik.http.routers.pusher-ssl.service=pusher"
      - "traefik.http.routers.pusher-ssl.tls.certresolver=myresolver"
    restart: unless-stopped

  back:
    image: thecodingmachine/workadventure-back:v1.4.6
    command: yarn run runprod
    environment:
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      ADMIN_API_URL: "$ADMIN_API_URL"
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
    labels:
      - "traefik.http.routers.back.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.back.entryPoints=web"
      - "traefik.http.services.back.loadbalancer.server.port=8080"
      - "traefik.http.routers.back-ssl.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.back-ssl.entryPoints=websecure"
      - "traefik.http.routers.back-ssl.tls=true"
      - "traefik.http.routers.back-ssl.service=back"
      - "traefik.http.routers.back-ssl.tls.certresolver=myresolver"
    restart: unless-stopped


          #  messages:
      #    #image: thecodingmachine/nodejs:14
      #    image: thecodingmachine/workadventure-back-base:latest
      #    environment:
      #      #STARTUP_COMMAND_0: sudo apt-get install -y inotify-tools
      #      STARTUP_COMMAND_1: yarn install
      #      STARTUP_COMMAND_2: yarn run proto:watch
      #    volumes:
      #      - ../../messages:/usr/src/app
      #      - ../../back:/usr/src/back
      #      - ../../front:/usr/src/front
      #      - ../../pusher:/usr/src/pusher
      #
      #  coturn:
      #    image: coturn/coturn:4.5.2
      #    command:
      #      - turnserver
      #      #- -c=/etc/coturn/turnserver.conf
      #      - --log-file=stdout
      #      - --external-ip=$$(detect-external-ip)
      #      - --listening-port=3478
      #      - --min-port=10000
      #      - --max-port=10010
      #      - --tls-listening-port=5349
      #      - --listening-ip=0.0.0.0
      #      - --realm=coturn.workadventure.${DOMAIN}
      #      - --server-name=coturn.workadventure.${DOMAIN}
      #      - --lt-cred-mech
      #      - --user=${TURN_USER}:${TURN_PASSWORD}
      #    network_mode: host
